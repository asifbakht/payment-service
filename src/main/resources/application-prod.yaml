server:
  port: ${CONTAINER_PORT}
  shutdown: graceful

spring:
  application:
    name: payment-service
  mvc:
    servlet:
      path: /api/v1/payment
  threads:
    virtual:
      enabled: true #Spring 3.2 feature
  ######## JPA ########
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
    properties:
      hibernate:
        format-sql: true
  ######## DB PROPERTIES ########
  datasource:
    #    url: jdbc:mysql://localhost/customer-db?createDatabaseIfNotExist=true
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/customer-db?createDatabaseIfNotExist=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari.connectionTimeout: 100000
    hikari.idleTimeout: 600000
    hikari.maxLifetime: 1800000
  ######## DB MIGRATION ########
  flyway:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/customer-db?createDatabaseIfNotExist=true
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    baseline:
      version: 1
    locations: classpath:db/migration
    enabled: true
  ######## REDIS CACHE #######
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
  ######## SPRINT DOC ########
springdoc:
  api-docs:
    path: /authentication-docs
  swagger-ui:
    path: /authentication-docs/swagger-ui-custom.html
  show-actuator: true
  ######## LOGGING ########
logging:
  level:
    root: ${LOG_ROOT_LEVEL}
    com.microservice.*: ${LOG_APP_LEVEL}
  ######## CIRCRUIT BREAKR ########
resilience4j:
  circuitbreaker:
    instances:
      payment-service:
        failureRateThreshold: ${CB_FAILURE_THRESHOLD}
        minimumNumberOfCalls: ${CB_FAILURE_MIN_N_CALL}
        permittedNumberOfCallsInHalfOpenState: ${CB_FAILURE_PERMITTED_NO_CALLS_IN_HALF_OPEN_STATE}
        slidingWindowSize: ${CB_FAILURE_SLIDING_WINDOW}
        waitDurationInOpenState: ${CB_FAILURE_WAIT_DURATION_IN_OPEN_STATE}
        slidingWindowType: COUNT_BASED
        automaticTransitionFromOpenToHalfOpenEnabled: true
        registerHealthIndicator: true
        ignoreExceptions:
          - com.microservice.payment.exception.DuplicateException
          - com.microservice.payment.exception.NotFoundException
          - com.microservice.payment.exception.GenericException
  ######### CUSTOM PROPERTIES ##########
payment:
  modification: ${TOTAL_MODIFICATION_ALLOWED}
  processing:
    day: ${TOTAL_DAYS_TO_PROCESS_PAYMENT} # days to add to finalize and process payments
  ######### CACHE CONFIGURATION #############
cache:
  default:
    time-to-live: ${DEFAULT_CACHE_TTL} #minutes
  payment:
    time-to-live: ${PAYMENT_CACHE_TTL} # minutes